/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.records;


import de.samply.bbmri.negotiator.jooq.tables.JsonQuery;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * query table to contain json text queries
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JsonQueryRecord extends UpdatableRecordImpl<JsonQueryRecord> implements Record2<Integer, String> {

	private static final long serialVersionUID = 232553305;

	/**
	 * Setter for <code>public.json_query.id</code>. primary key
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.json_query.id</code>. primary key
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.json_query.json_text</code>. text of query in json format
	 */
	public void setJsonText(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.json_query.json_text</code>. text of query in json format
	 */
	public String getJsonText() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return JsonQuery.JSON_QUERY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return JsonQuery.JSON_QUERY.JSON_TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getJsonText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JsonQueryRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JsonQueryRecord value2(String value) {
		setJsonText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JsonQueryRecord values(Integer value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached JsonQueryRecord
	 */
	public JsonQueryRecord() {
		super(JsonQuery.JSON_QUERY);
	}

	/**
	 * Create a detached, initialised JsonQueryRecord
	 */
	public JsonQueryRecord(Integer id, String jsonText) {
		super(JsonQuery.JSON_QUERY);

		setValue(0, id);
		setValue(1, jsonText);
	}
}
