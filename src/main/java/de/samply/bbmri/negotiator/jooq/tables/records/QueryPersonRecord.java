/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.records;


import de.samply.bbmri.negotiator.jooq.tables.QueryPerson;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table for the relationship between all the persons(owners) and the queries 
 * that they have replied to.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryPersonRecord extends UpdatableRecordImpl<QueryPersonRecord> implements Record3<Integer, Integer, Timestamp> {

	private static final long serialVersionUID = -40823437;

	/**
	 * Setter for <code>public.query_person.query_id</code>. This column along with person_Id will make the primary key. Its also a foreign key here, taken from query table
	 */
	public void setQueryId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.query_person.query_id</code>. This column along with person_Id will make the primary key. Its also a foreign key here, taken from query table
	 */
	public Integer getQueryId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.query_person.person_id</code>. This column along with the query_id column will make the primary key. Its also a foreign key here, taken from "person" table
	 */
	public void setPersonId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.query_person.person_id</code>. This column along with the query_id column will make the primary key. Its also a foreign key here, taken from "person" table
	 */
	public Integer getPersonId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.query_person.query_leaving_time</code>. The time when an owner leaves a query. This column is empty unless the query is ignored
	 */
	public void setQueryLeavingTime(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.query_person.query_leaving_time</code>. The time when an owner leaves a query. This column is empty unless the query is ignored
	 */
	public Timestamp getQueryLeavingTime() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Integer, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return QueryPerson.QUERY_PERSON.QUERY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return QueryPerson.QUERY_PERSON.PERSON_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return QueryPerson.QUERY_PERSON.QUERY_LEAVING_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getQueryId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getPersonId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getQueryLeavingTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryPersonRecord value1(Integer value) {
		setQueryId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryPersonRecord value2(Integer value) {
		setPersonId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryPersonRecord value3(Timestamp value) {
		setQueryLeavingTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryPersonRecord values(Integer value1, Integer value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QueryPersonRecord
	 */
	public QueryPersonRecord() {
		super(QueryPerson.QUERY_PERSON);
	}

	/**
	 * Create a detached, initialised QueryPersonRecord
	 */
	public QueryPersonRecord(Integer queryId, Integer personId, Timestamp queryLeavingTime) {
		super(QueryPerson.QUERY_PERSON);

		setValue(0, queryId);
		setValue(1, personId);
		setValue(2, queryLeavingTime);
	}
}
