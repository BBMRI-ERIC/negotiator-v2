/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.JOOQ.tables.records;


import de.samply.bbmri.negotiator.JOOQ.tables.Owner;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Owner table is one of the child of person table  
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OwnerRecord extends UpdatableRecordImpl<OwnerRecord> implements Record2<Integer, Integer> {

	private static final long serialVersionUID = -2103755183;

	/**
	 * Setter for <code>public.owner.id</code>. This foreign key is the primary key of person table
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.owner.id</code>. This foreign key is the primary key of person table
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.owner.locationId</code>. This foreign key is the primary key of person table
	 */
	public void setLocationid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.owner.locationId</code>. This foreign key is the primary key of person table
	 */
	public Integer getLocationid() {
		return (Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, Integer> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, Integer> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Owner.OWNER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Owner.OWNER.LOCATIONID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getLocationid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OwnerRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OwnerRecord value2(Integer value) {
		setLocationid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OwnerRecord values(Integer value1, Integer value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OwnerRecord
	 */
	public OwnerRecord() {
		super(Owner.OWNER);
	}

	/**
	 * Create a detached, initialised OwnerRecord
	 */
	public OwnerRecord(Integer id, Integer locationid) {
		super(Owner.OWNER);

		setValue(0, id);
		setValue(1, locationid);
	}
}
