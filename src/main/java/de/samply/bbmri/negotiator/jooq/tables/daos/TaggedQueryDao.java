/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.daos;


import de.samply.bbmri.negotiator.jooq.tables.TaggedQuery;
import de.samply.bbmri.negotiator.jooq.tables.records.TaggedQueryRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Table for queries that are tagged by names e.g. colonCancer,SkinCancer 
 * etc. Tag names need to be decided .
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaggedQueryDao extends DAOImpl<TaggedQueryRecord, de.samply.bbmri.negotiator.jooq.tables.pojos.TaggedQuery, Record2<Integer, Integer>> {

	/**
	 * Create a new TaggedQueryDao without any configuration
	 */
	public TaggedQueryDao() {
		super(TaggedQuery.TAGGED_QUERY, de.samply.bbmri.negotiator.jooq.tables.pojos.TaggedQuery.class);
	}

	/**
	 * Create a new TaggedQueryDao with an attached configuration
	 */
	public TaggedQueryDao(Configuration configuration) {
		super(TaggedQuery.TAGGED_QUERY, de.samply.bbmri.negotiator.jooq.tables.pojos.TaggedQuery.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<Integer, Integer> getId(de.samply.bbmri.negotiator.jooq.tables.pojos.TaggedQuery object) {
		return compositeKeyRecord(object.getQueryId(), object.getTagId());
	}

	/**
	 * Fetch records that have <code>query_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.TaggedQuery> fetchByQueryId(Integer... values) {
		return fetch(TaggedQuery.TAGGED_QUERY.QUERY_ID, values);
	}

	/**
	 * Fetch records that have <code>tag_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.TaggedQuery> fetchByTagId(Integer... values) {
		return fetch(TaggedQuery.TAGGED_QUERY.TAG_ID, values);
	}
}
