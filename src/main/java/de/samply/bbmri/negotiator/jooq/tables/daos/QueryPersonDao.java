/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.daos;


import de.samply.bbmri.negotiator.jooq.tables.QueryPerson;
import de.samply.bbmri.negotiator.jooq.tables.records.QueryPersonRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Table for the relationship between all the persons(owners) and the queries 
 * that they have replied to.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryPersonDao extends DAOImpl<QueryPersonRecord, de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson, Record2<Integer, Integer>> {

	/**
	 * Create a new QueryPersonDao without any configuration
	 */
	public QueryPersonDao() {
		super(QueryPerson.QUERY_PERSON, de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson.class);
	}

	/**
	 * Create a new QueryPersonDao with an attached configuration
	 */
	public QueryPersonDao(Configuration configuration) {
		super(QueryPerson.QUERY_PERSON, de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<Integer, Integer> getId(de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson object) {
		return compositeKeyRecord(object.getQueryId(), object.getPersonId());
	}

	/**
	 * Fetch records that have <code>query_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson> fetchByQueryId(Integer... values) {
		return fetch(QueryPerson.QUERY_PERSON.QUERY_ID, values);
	}

	/**
	 * Fetch records that have <code>person_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson> fetchByPersonId(Integer... values) {
		return fetch(QueryPerson.QUERY_PERSON.PERSON_ID, values);
	}

	/**
	 * Fetch records that have <code>query_leaving_time IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.QueryPerson> fetchByQueryLeavingTime(Timestamp... values) {
		return fetch(QueryPerson.QUERY_PERSON.QUERY_LEAVING_TIME, values);
	}
}
