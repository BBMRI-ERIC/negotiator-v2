/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.records;


import de.samply.bbmri.negotiator.jooq.enums.Persontype;
import de.samply.bbmri.negotiator.jooq.tables.Person;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * person table which is parent of researcher and owner
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record7<Integer, Persontype, String, String, String, byte[], Integer> {

	private static final long serialVersionUID = 448542654;

	/**
	 * Setter for <code>public.person.id</code>. primary key
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.person.id</code>. primary key
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.person.personType</code>. describes wether the person is researcher or owner - one of the the two child classes. 
	 */
	public void setPersontype(Persontype value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.person.personType</code>. describes wether the person is researcher or owner - one of the the two child classes. 
	 */
	public Persontype getPersontype() {
		return (Persontype) getValue(1);
	}

	/**
	 * Setter for <code>public.person.authSubject</code>. authentication string that comes from the authentication service
	 */
	public void setAuthsubject(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.person.authSubject</code>. authentication string that comes from the authentication service
	 */
	public String getAuthsubject() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.person.authName</code>. the real name of the user, value comes from the authentication service
	 */
	public void setAuthname(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.person.authName</code>. the real name of the user, value comes from the authentication service
	 */
	public String getAuthname() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.person.authEmail</code>. the email of the user, value comes from the authentication service
	 */
	public void setAuthemail(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.person.authEmail</code>. the email of the user, value comes from the authentication service
	 */
	public String getAuthemail() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.person.personImage</code>. image/avatar of the person
	 */
	public void setPersonimage(byte[] value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.person.personImage</code>. image/avatar of the person
	 */
	public byte[] getPersonimage() {
		return (byte[]) getValue(5);
	}

	/**
	 * Setter for <code>public.person.locationId</code>. only valid for biobank owners, the ID of the location he belongs to
	 */
	public void setLocationid(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.person.locationId</code>. only valid for biobank owners, the ID of the location he belongs to
	 */
	public Integer getLocationid() {
		return (Integer) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, Persontype, String, String, String, byte[], Integer> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, Persontype, String, String, String, byte[], Integer> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Person.PERSON.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Persontype> field2() {
		return Person.PERSON.PERSONTYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Person.PERSON.AUTHSUBJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Person.PERSON.AUTHNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Person.PERSON.AUTHEMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field6() {
		return Person.PERSON.PERSONIMAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Person.PERSON.LOCATIONID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Persontype value2() {
		return getPersontype();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAuthsubject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAuthname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getAuthemail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value6() {
		return getPersonimage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getLocationid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value2(Persontype value) {
		setPersontype(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value3(String value) {
		setAuthsubject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value4(String value) {
		setAuthname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value5(String value) {
		setAuthemail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value6(byte[] value) {
		setPersonimage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value7(Integer value) {
		setLocationid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord values(Integer value1, Persontype value2, String value3, String value4, String value5, byte[] value6, Integer value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PersonRecord
	 */
	public PersonRecord() {
		super(Person.PERSON);
	}

	/**
	 * Create a detached, initialised PersonRecord
	 */
	public PersonRecord(Integer id, Persontype persontype, String authsubject, String authname, String authemail, byte[] personimage, Integer locationid) {
		super(Person.PERSON);

		setValue(0, id);
		setValue(1, persontype);
		setValue(2, authsubject);
		setValue(3, authname);
		setValue(4, authemail);
		setValue(5, personimage);
		setValue(6, locationid);
	}
}
