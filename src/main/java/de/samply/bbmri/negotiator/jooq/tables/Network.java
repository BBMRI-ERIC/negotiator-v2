/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables;


import de.samply.bbmri.negotiator.jooq.Keys;
import de.samply.bbmri.negotiator.jooq.Public;
import de.samply.bbmri.negotiator.jooq.tables.records.NetworkRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Network extends TableImpl<NetworkRecord> {

	private static final long serialVersionUID = -1879334852;

	/**
	 * The reference instance of <code>public.network</code>
	 */
	public static final Network NETWORK = new Network();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NetworkRecord> getRecordType() {
		return NetworkRecord.class;
	}

	/**
	 * The column <code>public.network.id</code>.
	 */
	public final TableField<NetworkRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.network.name</code>.
	 */
	public final TableField<NetworkRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>public.network.description</code>.
	 */
	public final TableField<NetworkRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.network.acronym</code>.
	 */
	public final TableField<NetworkRecord, String> ACRONYM = createField("acronym", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.network.directory_id</code>.
	 */
	public final TableField<NetworkRecord, String> DIRECTORY_ID = createField("directory_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * Create a <code>public.network</code> table reference
	 */
	public Network() {
		this("network", null);
	}

	/**
	 * Create an aliased <code>public.network</code> table reference
	 */
	public Network(String alias) {
		this(alias, NETWORK);
	}

	private Network(String alias, Table<NetworkRecord> aliased) {
		this(alias, aliased, null);
	}

	private Network(String alias, Table<NetworkRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NetworkRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NETWORK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NetworkRecord> getPrimaryKey() {
		return Keys.NETWORK_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NetworkRecord>> getKeys() {
		return Arrays.<UniqueKey<NetworkRecord>>asList(Keys.NETWORK_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Network as(String alias) {
		return new Network(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Network rename(String name) {
		return new Network(name, null);
	}
}
