/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables;


import de.samply.bbmri.negotiator.jooq.Keys;
import de.samply.bbmri.negotiator.jooq.Public;
import de.samply.bbmri.negotiator.jooq.tables.records.QueryLifecycleCollectionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryLifecycleCollection extends TableImpl<QueryLifecycleCollectionRecord> {

	private static final long serialVersionUID = -1873885348;

	/**
	 * The reference instance of <code>public.query_lifecycle_collection</code>
	 */
	public static final QueryLifecycleCollection QUERY_LIFECYCLE_COLLECTION = new QueryLifecycleCollection();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QueryLifecycleCollectionRecord> getRecordType() {
		return QueryLifecycleCollectionRecord.class;
	}

	/**
	 * The column <code>public.query_lifecycle_collection.query_id</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, Integer> QUERY_ID = createField("query_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.status_user_id</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, Integer> STATUS_USER_ID = createField("status_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.collection_id</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, Integer> COLLECTION_ID = createField("collection_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.status</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.status_date</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, Timestamp> STATUS_DATE = createField("status_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.id</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.status_type</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, String> STATUS_TYPE = createField("status_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.query_lifecycle_collection.status_json</code>.
	 */
	public final TableField<QueryLifecycleCollectionRecord, String> STATUS_JSON = createField("status_json", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>public.query_lifecycle_collection</code> table reference
	 */
	public QueryLifecycleCollection() {
		this("query_lifecycle_collection", null);
	}

	/**
	 * Create an aliased <code>public.query_lifecycle_collection</code> table reference
	 */
	public QueryLifecycleCollection(String alias) {
		this(alias, QUERY_LIFECYCLE_COLLECTION);
	}

	private QueryLifecycleCollection(String alias, Table<QueryLifecycleCollectionRecord> aliased) {
		this(alias, aliased, null);
	}

	private QueryLifecycleCollection(String alias, Table<QueryLifecycleCollectionRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<QueryLifecycleCollectionRecord, Integer> getIdentity() {
		return Keys.IDENTITY_QUERY_LIFECYCLE_COLLECTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<QueryLifecycleCollectionRecord> getPrimaryKey() {
		return Keys.QUERY_LIFECYCLE_COLLECTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<QueryLifecycleCollectionRecord>> getKeys() {
		return Arrays.<UniqueKey<QueryLifecycleCollectionRecord>>asList(Keys.QUERY_LIFECYCLE_COLLECTION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryLifecycleCollection as(String alias) {
		return new QueryLifecycleCollection(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QueryLifecycleCollection rename(String name) {
		return new QueryLifecycleCollection(name, null);
	}
}
