/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.records;


import de.samply.bbmri.negotiator.jooq.tables.QueryAttachmentComment;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table for queries that have one or more attachments uploaded.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryAttachmentCommentRecord extends UpdatableRecordImpl<QueryAttachmentCommentRecord> implements Record5<Integer, Integer, String, String, Integer> {

	private static final long serialVersionUID = 763364176;

	/**
	 * Setter for <code>public.query_attachment_comment.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.query_attachment_comment.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.query_attachment_comment.query_id</code>. This column is a foreign key here, taken from query table
	 */
	public void setQueryId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.query_attachment_comment.query_id</code>. This column is a foreign key here, taken from query table
	 */
	public Integer getQueryId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.query_attachment_comment.attachment</code>. The name of the attached file stored in file system, not including the directory
	 */
	public void setAttachment(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.query_attachment_comment.attachment</code>. The name of the attached file stored in file system, not including the directory
	 */
	public String getAttachment() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.query_attachment_comment.attachment_type</code>.
	 */
	public void setAttachmentType(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.query_attachment_comment.attachment_type</code>.
	 */
	public String getAttachmentType() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.query_attachment_comment.comment_id</code>.
	 */
	public void setCommentId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.query_attachment_comment.comment_id</code>.
	 */
	public Integer getCommentId() {
		return (Integer) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, String, Integer> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, String, Integer> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT.QUERY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT.ATTACHMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT.ATTACHMENT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT.COMMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getQueryId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAttachment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAttachmentType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getCommentId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentCommentRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentCommentRecord value2(Integer value) {
		setQueryId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentCommentRecord value3(String value) {
		setAttachment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentCommentRecord value4(String value) {
		setAttachmentType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentCommentRecord value5(Integer value) {
		setCommentId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentCommentRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QueryAttachmentCommentRecord
	 */
	public QueryAttachmentCommentRecord() {
		super(QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT);
	}

	/**
	 * Create a detached, initialised QueryAttachmentCommentRecord
	 */
	public QueryAttachmentCommentRecord(Integer id, Integer queryId, String attachment, String attachmentType, Integer commentId) {
		super(QueryAttachmentComment.QUERY_ATTACHMENT_COMMENT);

		setValue(0, id);
		setValue(1, queryId);
		setValue(2, attachment);
		setValue(3, attachmentType);
		setValue(4, commentId);
	}
}
