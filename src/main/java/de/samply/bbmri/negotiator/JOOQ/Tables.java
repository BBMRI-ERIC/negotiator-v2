/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.JOOQ;


import de.samply.bbmri.negotiator.JOOQ.tables.Comment;
import de.samply.bbmri.negotiator.JOOQ.tables.Flaggedquery;
import de.samply.bbmri.negotiator.JOOQ.tables.Location;
import de.samply.bbmri.negotiator.JOOQ.tables.Owner;
import de.samply.bbmri.negotiator.JOOQ.tables.Person;
import de.samply.bbmri.negotiator.JOOQ.tables.Query;
import de.samply.bbmri.negotiator.JOOQ.tables.Researcher;
import de.samply.bbmri.negotiator.JOOQ.tables.Tag;
import de.samply.bbmri.negotiator.JOOQ.tables.Taggedquery;

import javax.annotation.Generated;


/**
 * Convenience access to all tables in public
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

	/**
	 * table to store comments on a query
	 */
	public static final Comment COMMENT = de.samply.bbmri.negotiator.JOOQ.tables.Comment.COMMENT;

	/**
	 * Table for queries that are flagged/bookmarked. bookmark options are starred, archived and ignored.
	 */
	public static final Flaggedquery FLAGGEDQUERY = de.samply.bbmri.negotiator.JOOQ.tables.Flaggedquery.FLAGGEDQUERY;

	/**
	 * Table to store locations of researchers
	 */
	public static final Location LOCATION = de.samply.bbmri.negotiator.JOOQ.tables.Location.LOCATION;

	/**
	 * Owner table is one of the child of person table  
	 */
	public static final Owner OWNER = de.samply.bbmri.negotiator.JOOQ.tables.Owner.OWNER;

	/**
	 * person table which is parent of researcher and owner
	 */
	public static final Person PERSON = de.samply.bbmri.negotiator.JOOQ.tables.Person.PERSON;

	/**
	 * query table to contain all  queries
	 */
	public static final Query QUERY = de.samply.bbmri.negotiator.JOOQ.tables.Query.QUERY;

	/**
	 * researcher table - one of the child's of the person table 
	 */
	public static final Researcher RESEARCHER = de.samply.bbmri.negotiator.JOOQ.tables.Researcher.RESEARCHER;

	/**
	 * Table that contains tags for queries
	 */
	public static final Tag TAG = de.samply.bbmri.negotiator.JOOQ.tables.Tag.TAG;

	/**
	 * Table for queries that are tagged by names e.g. colonCancer,SkinCancer etc. Tag names need to be decided .
	 */
	public static final Taggedquery TAGGEDQUERY = de.samply.bbmri.negotiator.JOOQ.tables.Taggedquery.TAGGEDQUERY;
}
