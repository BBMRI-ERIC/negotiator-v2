/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables;


import de.samply.bbmri.negotiator.jooq.Keys;
import de.samply.bbmri.negotiator.jooq.Public;
import de.samply.bbmri.negotiator.jooq.tables.records.PersonQuerylifecycleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonQuerylifecycle extends TableImpl<PersonQuerylifecycleRecord> {

	private static final long serialVersionUID = -2095045054;

	/**
	 * The reference instance of <code>public.person_querylifecycle</code>
	 */
	public static final PersonQuerylifecycle PERSON_QUERYLIFECYCLE = new PersonQuerylifecycle();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PersonQuerylifecycleRecord> getRecordType() {
		return PersonQuerylifecycleRecord.class;
	}

	/**
	 * The column <code>public.person_querylifecycle.person_id</code>.
	 */
	public final TableField<PersonQuerylifecycleRecord, Integer> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.person_querylifecycle.query_lifecycle_collection_id</code>.
	 */
	public final TableField<PersonQuerylifecycleRecord, Integer> QUERY_LIFECYCLE_COLLECTION_ID = createField("query_lifecycle_collection_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.person_querylifecycle.read</code>.
	 */
	public final TableField<PersonQuerylifecycleRecord, Boolean> READ = createField("read", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.person_querylifecycle.date_read</code>.
	 */
	public final TableField<PersonQuerylifecycleRecord, Timestamp> DATE_READ = createField("date_read", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>public.person_querylifecycle</code> table reference
	 */
	public PersonQuerylifecycle() {
		this("person_querylifecycle", null);
	}

	/**
	 * Create an aliased <code>public.person_querylifecycle</code> table reference
	 */
	public PersonQuerylifecycle(String alias) {
		this(alias, PERSON_QUERYLIFECYCLE);
	}

	private PersonQuerylifecycle(String alias, Table<PersonQuerylifecycleRecord> aliased) {
		this(alias, aliased, null);
	}

	private PersonQuerylifecycle(String alias, Table<PersonQuerylifecycleRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PersonQuerylifecycleRecord> getPrimaryKey() {
		return Keys.PERSON_QUERYLIFECYCLE_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PersonQuerylifecycleRecord>> getKeys() {
		return Arrays.<UniqueKey<PersonQuerylifecycleRecord>>asList(Keys.PERSON_QUERYLIFECYCLE_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonQuerylifecycle as(String alias) {
		return new PersonQuerylifecycle(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PersonQuerylifecycle rename(String name) {
		return new PersonQuerylifecycle(name, null);
	}
}
