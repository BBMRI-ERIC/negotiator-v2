/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables;


import de.samply.bbmri.negotiator.jooq.Keys;
import de.samply.bbmri.negotiator.jooq.Public;
import de.samply.bbmri.negotiator.jooq.tables.records.QueryAttachmentPrivateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryAttachmentPrivate extends TableImpl<QueryAttachmentPrivateRecord> {

	private static final long serialVersionUID = -620407162;

	/**
	 * The reference instance of <code>public.query_attachment_private</code>
	 */
	public static final QueryAttachmentPrivate QUERY_ATTACHMENT_PRIVATE = new QueryAttachmentPrivate();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<QueryAttachmentPrivateRecord> getRecordType() {
		return QueryAttachmentPrivateRecord.class;
	}

	/**
	 * The column <code>public.query_attachment_private.id</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.query_attachment_private.query_id</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, Integer> QUERY_ID = createField("query_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.query_attachment_private.person_id</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, Integer> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.query_attachment_private.biobank_in_private_chat</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, Integer> BIOBANK_IN_PRIVATE_CHAT = createField("biobank_in_private_chat", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.query_attachment_private.attachment_time</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, Timestamp> ATTACHMENT_TIME = createField("attachment_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.query_attachment_private.attachment</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, String> ATTACHMENT = createField("attachment", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.query_attachment_private.file_type</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, String> FILE_TYPE = createField("file_type", org.jooq.impl.SQLDataType.VARCHAR.defaulted(true), this, "");

	/**
	 * The column <code>public.query_attachment_private.offer_id</code>.
	 */
	public final TableField<QueryAttachmentPrivateRecord, Integer> OFFER_ID = createField("offer_id", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>public.query_attachment_private</code> table reference
	 */
	public QueryAttachmentPrivate() {
		this("query_attachment_private", null);
	}

	/**
	 * Create an aliased <code>public.query_attachment_private</code> table reference
	 */
	public QueryAttachmentPrivate(String alias) {
		this(alias, QUERY_ATTACHMENT_PRIVATE);
	}

	private QueryAttachmentPrivate(String alias, Table<QueryAttachmentPrivateRecord> aliased) {
		this(alias, aliased, null);
	}

	private QueryAttachmentPrivate(String alias, Table<QueryAttachmentPrivateRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<QueryAttachmentPrivateRecord, Integer> getIdentity() {
		return Keys.IDENTITY_QUERY_ATTACHMENT_PRIVATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<QueryAttachmentPrivateRecord> getPrimaryKey() {
		return Keys.QUERY_ATTACHMENT_PRIVATE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<QueryAttachmentPrivateRecord>> getKeys() {
		return Arrays.<UniqueKey<QueryAttachmentPrivateRecord>>asList(Keys.QUERY_ATTACHMENT_PRIVATE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryAttachmentPrivate as(String alias) {
		return new QueryAttachmentPrivate(alias, this);
	}

	/**
	 * Rename this table
	 */
	public QueryAttachmentPrivate rename(String name) {
		return new QueryAttachmentPrivate(name, null);
	}
}
