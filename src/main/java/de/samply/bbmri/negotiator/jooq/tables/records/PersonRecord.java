/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.records;


import de.samply.bbmri.negotiator.jooq.tables.Person;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * person table which is parent of researcher and owner
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record8<Integer, String, String, String, byte[], Boolean, String, Boolean> {

	private static final long serialVersionUID = 830686008;

	/**
	 * Setter for <code>public.person.id</code>. primary key
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.person.id</code>. primary key
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.person.auth_subject</code>. authentication string that comes from the authentication service
	 */
	public void setAuthSubject(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.person.auth_subject</code>. authentication string that comes from the authentication service
	 */
	public String getAuthSubject() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.person.auth_name</code>. the real name of the user, value comes from the authentication service
	 */
	public void setAuthName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.person.auth_name</code>. the real name of the user, value comes from the authentication service
	 */
	public String getAuthName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.person.auth_email</code>. the email of the user, value comes from the authentication service
	 */
	public void setAuthEmail(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.person.auth_email</code>. the email of the user, value comes from the authentication service
	 */
	public String getAuthEmail() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.person.person_image</code>. image/avatar of the person
	 */
	public void setPersonImage(byte[] value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.person.person_image</code>. image/avatar of the person
	 */
	public byte[] getPersonImage() {
		return (byte[]) getValue(4);
	}

	/**
	 * Setter for <code>public.person.is_admin</code>. boolean if the person is an admin
	 */
	public void setIsAdmin(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.person.is_admin</code>. boolean if the person is an admin
	 */
	public Boolean getIsAdmin() {
		return (Boolean) getValue(5);
	}

	/**
	 * Setter for <code>public.person.organization</code>.
	 */
	public void setOrganization(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.person.organization</code>.
	 */
	public String getOrganization() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>public.person.synced_directory</code>.
	 */
	public void setSyncedDirectory(Boolean value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.person.synced_directory</code>.
	 */
	public Boolean getSyncedDirectory() {
		return (Boolean) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, String, String, byte[], Boolean, String, Boolean> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, String, String, byte[], Boolean, String, Boolean> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Person.PERSON.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Person.PERSON.AUTH_SUBJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Person.PERSON.AUTH_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Person.PERSON.AUTH_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field5() {
		return Person.PERSON.PERSON_IMAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return Person.PERSON.IS_ADMIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Person.PERSON.ORGANIZATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field8() {
		return Person.PERSON.SYNCED_DIRECTORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getAuthSubject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAuthName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAuthEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value5() {
		return getPersonImage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getIsAdmin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getOrganization();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value8() {
		return getSyncedDirectory();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value2(String value) {
		setAuthSubject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value3(String value) {
		setAuthName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value4(String value) {
		setAuthEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value5(byte[] value) {
		setPersonImage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value6(Boolean value) {
		setIsAdmin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value7(String value) {
		setOrganization(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value8(Boolean value) {
		setSyncedDirectory(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord values(Integer value1, String value2, String value3, String value4, byte[] value5, Boolean value6, String value7, Boolean value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PersonRecord
	 */
	public PersonRecord() {
		super(Person.PERSON);
	}

	/**
	 * Create a detached, initialised PersonRecord
	 */
	public PersonRecord(Integer id, String authSubject, String authName, String authEmail, byte[] personImage, Boolean isAdmin, String organization, Boolean syncedDirectory) {
		super(Person.PERSON);

		setValue(0, id);
		setValue(1, authSubject);
		setValue(2, authName);
		setValue(3, authEmail);
		setValue(4, personImage);
		setValue(5, isAdmin);
		setValue(6, organization);
		setValue(7, syncedDirectory);
	}
}
