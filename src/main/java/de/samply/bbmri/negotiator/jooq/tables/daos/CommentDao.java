/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.daos;


import de.samply.bbmri.negotiator.jooq.tables.Comment;
import de.samply.bbmri.negotiator.jooq.tables.records.CommentRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * table to store commentCount on a query
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentDao extends DAOImpl<CommentRecord, de.samply.bbmri.negotiator.jooq.tables.pojos.Comment, Integer> {

	/**
	 * Create a new CommentDao without any configuration
	 */
	public CommentDao() {
		super(Comment.COMMENT, de.samply.bbmri.negotiator.jooq.tables.pojos.Comment.class);
	}

	/**
	 * Create a new CommentDao with an attached configuration
	 */
	public CommentDao(Configuration configuration) {
		super(Comment.COMMENT, de.samply.bbmri.negotiator.jooq.tables.pojos.Comment.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(de.samply.bbmri.negotiator.jooq.tables.pojos.Comment object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchById(Integer... values) {
		return fetch(Comment.COMMENT.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public de.samply.bbmri.negotiator.jooq.tables.pojos.Comment fetchOneById(Integer value) {
		return fetchOne(Comment.COMMENT.ID, value);
	}

	/**
	 * Fetch records that have <code>query_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByQueryId(Integer... values) {
		return fetch(Comment.COMMENT.QUERY_ID, values);
	}

	/**
	 * Fetch records that have <code>person_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByPersonId(Integer... values) {
		return fetch(Comment.COMMENT.PERSON_ID, values);
	}

	/**
	 * Fetch records that have <code>comment_time IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByCommentTime(Timestamp... values) {
		return fetch(Comment.COMMENT.COMMENT_TIME, values);
	}

	/**
	 * Fetch records that have <code>text IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByText(String... values) {
		return fetch(Comment.COMMENT.TEXT, values);
	}

	/**
	 * Fetch records that have <code>attachment IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByAttachment(Boolean... values) {
		return fetch(Comment.COMMENT.ATTACHMENT, values);
	}

	/**
	 * Fetch records that have <code>status IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByStatus(String... values) {
		return fetch(Comment.COMMENT.STATUS, values);
	}

	/**
	 * Fetch records that have <code>moderated IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Comment> fetchByModerated(Boolean... values) {
		return fetch(Comment.COMMENT.MODERATED, values);
	}
}
