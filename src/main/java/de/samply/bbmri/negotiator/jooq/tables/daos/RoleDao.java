/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.daos;


import de.samply.bbmri.negotiator.jooq.enums.RoleType;
import de.samply.bbmri.negotiator.jooq.tables.Role;
import de.samply.bbmri.negotiator.jooq.tables.records.RoleRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Table for different roles of a user.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleDao extends DAOImpl<RoleRecord, de.samply.bbmri.negotiator.jooq.tables.pojos.Role, Record2<RoleType, Integer>> {

	/**
	 * Create a new RoleDao without any configuration
	 */
	public RoleDao() {
		super(Role.ROLE, de.samply.bbmri.negotiator.jooq.tables.pojos.Role.class);
	}

	/**
	 * Create a new RoleDao with an attached configuration
	 */
	public RoleDao(Configuration configuration) {
		super(Role.ROLE, de.samply.bbmri.negotiator.jooq.tables.pojos.Role.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<RoleType, Integer> getId(de.samply.bbmri.negotiator.jooq.tables.pojos.Role object) {
		return compositeKeyRecord(object.getRoleType(), object.getPersonId());
	}

	/**
	 * Fetch records that have <code>role_type IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Role> fetchByRoleType(RoleType... values) {
		return fetch(Role.ROLE.ROLE_TYPE, values);
	}

	/**
	 * Fetch records that have <code>person_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.Role> fetchByPersonId(Integer... values) {
		return fetch(Role.ROLE.PERSON_ID, values);
	}
}
