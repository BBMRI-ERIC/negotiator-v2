/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.daos;


import de.samply.bbmri.negotiator.jooq.tables.PersonCollection;
import de.samply.bbmri.negotiator.jooq.tables.records.PersonCollectionRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Table for connecting people with collections
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonCollectionDao extends DAOImpl<PersonCollectionRecord, de.samply.bbmri.negotiator.jooq.tables.pojos.PersonCollection, Record2<Integer, Integer>> {

	/**
	 * Create a new PersonCollectionDao without any configuration
	 */
	public PersonCollectionDao() {
		super(PersonCollection.PERSON_COLLECTION, de.samply.bbmri.negotiator.jooq.tables.pojos.PersonCollection.class);
	}

	/**
	 * Create a new PersonCollectionDao with an attached configuration
	 */
	public PersonCollectionDao(Configuration configuration) {
		super(PersonCollection.PERSON_COLLECTION, de.samply.bbmri.negotiator.jooq.tables.pojos.PersonCollection.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<Integer, Integer> getId(de.samply.bbmri.negotiator.jooq.tables.pojos.PersonCollection object) {
		return compositeKeyRecord(object.getPersonId(), object.getCollectionId());
	}

	/**
	 * Fetch records that have <code>person_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.PersonCollection> fetchByPersonId(Integer... values) {
		return fetch(PersonCollection.PERSON_COLLECTION.PERSON_ID, values);
	}

	/**
	 * Fetch records that have <code>collection_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.PersonCollection> fetchByCollectionId(Integer... values) {
		return fetch(PersonCollection.PERSON_COLLECTION.COLLECTION_ID, values);
	}
}
