/**
 * This class is generated by jOOQ
 */
package de.samply.bbmri.negotiator.jooq.tables.daos;


import de.samply.bbmri.negotiator.jooq.tables.MailNotification;
import de.samply.bbmri.negotiator.jooq.tables.records.MailNotificationRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MailNotificationDao extends DAOImpl<MailNotificationRecord, de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification, Integer> {

	/**
	 * Create a new MailNotificationDao without any configuration
	 */
	public MailNotificationDao() {
		super(MailNotification.MAIL_NOTIFICATION, de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification.class);
	}

	/**
	 * Create a new MailNotificationDao with an attached configuration
	 */
	public MailNotificationDao(Configuration configuration) {
		super(MailNotification.MAIL_NOTIFICATION, de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification object) {
		return object.getMailNotificationId();
	}

	/**
	 * Fetch records that have <code>mail_notification_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByMailNotificationId(Integer... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.MAIL_NOTIFICATION_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>mail_notification_id = value</code>
	 */
	public de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification fetchOneByMailNotificationId(Integer value) {
		return fetchOne(MailNotification.MAIL_NOTIFICATION.MAIL_NOTIFICATION_ID, value);
	}

	/**
	 * Fetch records that have <code>notification_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByNotificationId(Integer... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.NOTIFICATION_ID, values);
	}

	/**
	 * Fetch records that have <code>person_id IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByPersonId(Integer... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.PERSON_ID, values);
	}

	/**
	 * Fetch records that have <code>email_address IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByEmailAddress(String... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.EMAIL_ADDRESS, values);
	}

	/**
	 * Fetch records that have <code>status IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByStatus(String... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.STATUS, values);
	}

	/**
	 * Fetch records that have <code>create_date IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByCreateDate(Timestamp... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.CREATE_DATE, values);
	}

	/**
	 * Fetch records that have <code>send_date IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchBySendDate(Timestamp... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.SEND_DATE, values);
	}

	/**
	 * Fetch records that have <code>subject IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchBySubject(String... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.SUBJECT, values);
	}

	/**
	 * Fetch records that have <code>body IN (values)</code>
	 */
	public List<de.samply.bbmri.negotiator.jooq.tables.pojos.MailNotification> fetchByBody(String... values) {
		return fetch(MailNotification.MAIL_NOTIFICATION.BODY, values);
	}
}
